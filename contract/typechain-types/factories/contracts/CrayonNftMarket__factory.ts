/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CrayonNftMarket,
  CrayonNftMarketInterface,
} from "../../contracts/CrayonNftMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct CrayonNftMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct CrayonNftMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct CrayonNftMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526658d15e1762800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a59806100746000396000f3fe6080604052600436106100555760003560e01c80630f08efe01461005a57806312e8558514610085578063202e3740146100b057806358eb2df5146100db578063c23b139e146100f7578063f064c32e14610113575b600080fd5b34801561006657600080fd5b5061006f61013e565b60405161007c9190611424565b60405180910390f35b34801561009157600080fd5b5061009a610407565b6040516100a79190611455565b60405180910390f35b3480156100bc57600080fd5b506100c5610411565b6040516100d29190611424565b60405180910390f35b6100f560048036038101906100f091906114cd565b610706565b005b610111600480360381019061010c9190611520565b610a24565b005b34801561011f57600080fd5b50610128610ca6565b6040516101359190611424565b60405180910390f35b6060600061014c6001610ff2565b9050600061015a6002610ff2565b6101646001610ff2565b61016e919061158f565b90506000808267ffffffffffffffff81111561018d5761018c6115c3565b5b6040519080825280602002602001820160405280156101c657816020015b6101b36111d0565b8152602001906001900390816101ab5790505b50905060005b848110156103fc57600073ffffffffffffffffffffffffffffffffffffffff16600560006001846101fd91906115f2565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036103e957600060018261025991906115f2565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106103cc576103cb611626565b5b60200260200101819052506001856103e491906115f2565b945050505b80806103f490611655565b9150506101cc565b508094505050505090565b6000600454905090565b6060600061041f6001610ff2565b905060008060005b838110156104705760005b8481101561045c5760018461044791906115f2565b9350808061045490611655565b915050610432565b50808061046890611655565b915050610427565b5060008267ffffffffffffffff81111561048d5761048c6115c3565b5b6040519080825280602002602001820160405280156104c657816020015b6104b36111d0565b8152602001906001900390816104ab5790505b50905060005b848110156106fb573373ffffffffffffffffffffffffffffffffffffffff16600560006001846104fc91906115f2565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106e857600060018261055891906115f2565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106106cb576106ca611626565b5b60200260200101819052506001856106e391906115f2565b945050505b80806106f390611655565b9150506104cc565b508094505050505090565b61070e611000565b60008111610751576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610748906116fa565b60405180910390fd5b6004543414610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c9061178c565b60405180910390fd5b61079f600161104f565b60006107ab6001610ff2565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161098c939291906117bb565b600060405180830381600087803b1580156109a657600080fd5b505af11580156109ba573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827f045dfa01dcba2b36aba1d3dc4a874f4b0c5d2fbeb8d2c4b34a7d88c8d8f929d1336000876000604051610a0e9493929190611801565b60405180910390a450610a1f611065565b505050565b610a2c611000565b600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b906118b8565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610b20573d6000803e3d6000fd5b50336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610baf600261104f565b610bee6040518060400160405280601581526020017f4e667420436f6e747261637420416464726573733a00000000000000000000008152508561106f565b610c2d6040518060400160405280600881526020017f746f6b656e49643a0000000000000000000000000000000000000000000000008152508261110b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610c97573d6000803e3d6000fd5b505050610ca2611065565b5050565b60606000610cb46001610ff2565b905060008060005b83811015610d5c573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610cec91906115f2565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d4957600183610d4691906115f2565b92505b8080610d5490611655565b915050610cbc565b5060008267ffffffffffffffff811115610d7957610d786115c3565b5b604051908082528060200260200182016040528015610db257816020015b610d9f6111d0565b815260200190600190039081610d975790505b50905060005b84811015610fe7573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610de891906115f2565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610fd4576000600182610e4491906115f2565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110610fb757610fb6611626565b5b6020026020010181905250600185610fcf91906115f2565b945050505b8080610fdf90611655565b915050610db8565b508094505050505090565b600081600001549050919050565b600260005403611045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103c90611924565b60405180910390fd5b6002600081905550565b6001816000016000828254019250508190555050565b6001600081905550565b61110782826040516024016110859291906119c3565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506111a7565b5050565b6111a382826040516024016111219291906119f3565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506111a7565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6112908161127d565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112c182611296565b9050919050565b6112d1816112b6565b82525050565b60006112e282611296565b9050919050565b6112f2816112d7565b82525050565b60008115159050919050565b61130d816112f8565b82525050565b60e0820160008201516113296000850182611287565b50602082015161133c60208501826112c8565b50604082015161134f6040850182611287565b50606082015161136260608501826112e9565b50608082015161137560808501826112e9565b5060a082015161138860a0850182611287565b5060c082015161139b60c0850182611304565b50505050565b60006113ad8383611313565b60e08301905092915050565b6000602082019050919050565b60006113d182611251565b6113db818561125c565b93506113e68361126d565b8060005b838110156114175781516113fe88826113a1565b9750611409836113b9565b9250506001810190506113ea565b5085935050505092915050565b6000602082019050818103600083015261143e81846113c6565b905092915050565b61144f8161127d565b82525050565b600060208201905061146a6000830184611446565b92915050565b600080fd5b61147e816112b6565b811461148957600080fd5b50565b60008135905061149b81611475565b92915050565b6114aa8161127d565b81146114b557600080fd5b50565b6000813590506114c7816114a1565b92915050565b6000806000606084860312156114e6576114e5611470565b5b60006114f48682870161148c565b9350506020611505868287016114b8565b9250506040611516868287016114b8565b9150509250925092565b6000806040838503121561153757611536611470565b5b60006115458582860161148c565b9250506020611556858286016114b8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061159a8261127d565b91506115a58361127d565b92508282039050818111156115bd576115bc611560565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006115fd8261127d565b91506116088361127d565b92508282019050808211156116205761161f611560565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006116608261127d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361169257611691611560565b5b600182019050919050565b600082825260208201905092915050565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b60006116e4601c8361169d565b91506116ef826116ae565b602082019050919050565b60006020820190508181036000830152611713816116d7565b9050919050565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b600061177660248361169d565b91506117818261171a565b604082019050919050565b600060208201905081810360008301526117a581611769565b9050919050565b6117b5816112b6565b82525050565b60006060820190506117d060008301866117ac565b6117dd60208301856117ac565b6117ea6040830184611446565b949350505050565b6117fb816112f8565b82525050565b600060808201905061181660008301876117ac565b61182360208301866117ac565b6118306040830185611446565b61183d60608301846117f2565b95945050505050565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b60006118a260408361169d565b91506118ad82611846565b604082019050919050565b600060208201905081810360008301526118d181611895565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061190e601f8361169d565b9150611919826118d8565b602082019050919050565b6000602082019050818103600083015261193d81611901565b9050919050565b600081519050919050565b60005b8381101561196d578082015181840152602081019050611952565b60008484015250505050565b6000601f19601f8301169050919050565b600061199582611944565b61199f818561169d565b93506119af81856020860161194f565b6119b881611979565b840191505092915050565b600060408201905081810360008301526119dd818561198a565b90506119ec60208301846117ac565b9392505050565b60006040820190508181036000830152611a0d818561198a565b9050611a1c6020830184611446565b939250505056fea264697066735822122015e33296f10a225f79168bf653f9360bcf0358af76901762cc5d9b684edb46ca64736f6c63430008110033";

type CrayonNftMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrayonNftMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrayonNftMarket__factory extends ContractFactory {
  constructor(...args: CrayonNftMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrayonNftMarket> {
    return super.deploy(overrides || {}) as Promise<CrayonNftMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrayonNftMarket {
    return super.attach(address) as CrayonNftMarket;
  }
  override connect(signer: Signer): CrayonNftMarket__factory {
    return super.connect(signer) as CrayonNftMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrayonNftMarketInterface {
    return new utils.Interface(_abi) as CrayonNftMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrayonNftMarket {
    return new Contract(address, _abi, signerOrProvider) as CrayonNftMarket;
  }
}
