/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ARNftMarket,
  ARNftMarketInterface,
} from "../../contracts/ARNftMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct ARNftMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct ARNftMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct ARNftMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526658d15e1762800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119aa806100746000396000f3fe6080604052600436106100555760003560e01c80630f08efe01461005a57806312e8558514610085578063202e3740146100b057806358eb2df5146100db578063c23b139e146100f7578063f064c32e14610113575b600080fd5b34801561006657600080fd5b5061006f61013e565b60405161007c91906113e1565b60405180910390f35b34801561009157600080fd5b5061009a610407565b6040516100a79190611412565b60405180910390f35b3480156100bc57600080fd5b506100c5610411565b6040516100d291906113e1565b60405180910390f35b6100f560048036038101906100f0919061148a565b610706565b005b610111600480360381019061010c91906114dd565b6109e1565b005b34801561011f57600080fd5b50610128610c63565b60405161013591906113e1565b60405180910390f35b6060600061014c6001610faf565b9050600061015a6002610faf565b6101646001610faf565b61016e919061154c565b90506000808267ffffffffffffffff81111561018d5761018c611580565b5b6040519080825280602002602001820160405280156101c657816020015b6101b361118d565b8152602001906001900390816101ab5790505b50905060005b848110156103fc57600073ffffffffffffffffffffffffffffffffffffffff16600560006001846101fd91906115af565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036103e957600060018261025991906115af565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106103cc576103cb6115e3565b5b60200260200101819052506001856103e491906115af565b945050505b80806103f490611612565b9150506101cc565b508094505050505090565b6000600454905090565b6060600061041f6001610faf565b905060008060005b838110156104705760005b8481101561045c5760018461044791906115af565b9350808061045490611612565b915050610432565b50808061046890611612565b915050610427565b5060008267ffffffffffffffff81111561048d5761048c611580565b5b6040519080825280602002602001820160405280156104c657816020015b6104b361118d565b8152602001906001900390816104ab5790505b50905060005b848110156106fb573373ffffffffffffffffffffffffffffffffffffffff16600560006001846104fc91906115af565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106e857600060018261055891906115af565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106106cb576106ca6115e3565b5b60200260200101819052506001856106e391906115af565b945050505b80806106f390611612565b9150506104cc565b508094505050505090565b61070e610fbd565b6004543414610752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610749906116dd565b60405180910390fd5b61075c600161100c565b60006107686001610faf565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016109499392919061170c565b600060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827f045dfa01dcba2b36aba1d3dc4a874f4b0c5d2fbeb8d2c4b34a7d88c8d8f929d13360008760006040516109cb9493929190611752565b60405180910390a4506109dc611022565b505050565b6109e9610fbd565b600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610a61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5890611809565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610add573d6000803e3d6000fd5b50336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610b6c600261100c565b610bab6040518060400160405280601581526020017f4e667420436f6e747261637420416464726573733a00000000000000000000008152508561102c565b610bea6040518060400160405280600881526020017f746f6b656e49643a000000000000000000000000000000000000000000000000815250826110c8565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610c54573d6000803e3d6000fd5b505050610c5f611022565b5050565b60606000610c716001610faf565b905060008060005b83811015610d19573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610ca991906115af565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d0657600183610d0391906115af565b92505b8080610d1190611612565b915050610c79565b5060008267ffffffffffffffff811115610d3657610d35611580565b5b604051908082528060200260200182016040528015610d6f57816020015b610d5c61118d565b815260200190600190039081610d545790505b50905060005b84811015610fa4573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610da591906115af565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f91576000600182610e0191906115af565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110610f7457610f736115e3565b5b6020026020010181905250600185610f8c91906115af565b945050505b8080610f9c90611612565b915050610d75565b508094505050505090565b600081600001549050919050565b600260005403611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff990611875565b60405180910390fd5b6002600081905550565b6001816000016000828254019250508190555050565b6001600081905550565b6110c48282604051602401611042929190611914565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611164565b5050565b61116082826040516024016110de929190611944565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611164565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61124d8161123a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127e82611253565b9050919050565b61128e81611273565b82525050565b600061129f82611253565b9050919050565b6112af81611294565b82525050565b60008115159050919050565b6112ca816112b5565b82525050565b60e0820160008201516112e66000850182611244565b5060208201516112f96020850182611285565b50604082015161130c6040850182611244565b50606082015161131f60608501826112a6565b50608082015161133260808501826112a6565b5060a082015161134560a0850182611244565b5060c082015161135860c08501826112c1565b50505050565b600061136a83836112d0565b60e08301905092915050565b6000602082019050919050565b600061138e8261120e565b6113988185611219565b93506113a38361122a565b8060005b838110156113d45781516113bb888261135e565b97506113c683611376565b9250506001810190506113a7565b5085935050505092915050565b600060208201905081810360008301526113fb8184611383565b905092915050565b61140c8161123a565b82525050565b60006020820190506114276000830184611403565b92915050565b600080fd5b61143b81611273565b811461144657600080fd5b50565b60008135905061145881611432565b92915050565b6114678161123a565b811461147257600080fd5b50565b6000813590506114848161145e565b92915050565b6000806000606084860312156114a3576114a261142d565b5b60006114b186828701611449565b93505060206114c286828701611475565b92505060406114d386828701611475565b9150509250925092565b600080604083850312156114f4576114f361142d565b5b600061150285828601611449565b925050602061151385828601611475565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115578261123a565b91506115628361123a565b925082820390508181111561157a5761157961151d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006115ba8261123a565b91506115c58361123a565b92508282019050808211156115dd576115dc61151d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061161d8261123a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361164f5761164e61151d565b5b600182019050919050565b600082825260208201905092915050565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b60006116c760248361165a565b91506116d28261166b565b604082019050919050565b600060208201905081810360008301526116f6816116ba565b9050919050565b61170681611273565b82525050565b600060608201905061172160008301866116fd565b61172e60208301856116fd565b61173b6040830184611403565b949350505050565b61174c816112b5565b82525050565b600060808201905061176760008301876116fd565b61177460208301866116fd565b6117816040830185611403565b61178e6060830184611743565b95945050505050565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b60006117f360408361165a565b91506117fe82611797565b604082019050919050565b60006020820190508181036000830152611822816117e6565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061185f601f8361165a565b915061186a82611829565b602082019050919050565b6000602082019050818103600083015261188e81611852565b9050919050565b600081519050919050565b60005b838110156118be5780820151818401526020810190506118a3565b60008484015250505050565b6000601f19601f8301169050919050565b60006118e682611895565b6118f0818561165a565b93506119008185602086016118a0565b611909816118ca565b840191505092915050565b6000604082019050818103600083015261192e81856118db565b905061193d60208301846116fd565b9392505050565b6000604082019050818103600083015261195e81856118db565b905061196d6020830184611403565b939250505056fea2646970667358221220af8ef7b64ee23592bf85cdb734338d2d50b3da8abe4777d57f035b17c4035ebf64736f6c63430008110033";

type ARNftMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ARNftMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ARNftMarket__factory extends ContractFactory {
  constructor(...args: ARNftMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ARNftMarket> {
    return super.deploy(overrides || {}) as Promise<ARNftMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ARNftMarket {
    return super.attach(address) as ARNftMarket;
  }
  override connect(signer: Signer): ARNftMarket__factory {
    return super.connect(signer) as ARNftMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ARNftMarketInterface {
    return new utils.Interface(_abi) as ARNftMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ARNftMarket {
    return new Contract(address, _abi, signerOrProvider) as ARNftMarket;
  }
}
